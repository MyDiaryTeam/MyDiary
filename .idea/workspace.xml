<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="434e5ea7-0a51-49b0-9943-b6dd5edb56f3" name="변경" comment="################&#10;# &lt;타입&gt; : &lt;제목&gt; 의 형식으로 제목을 아래 공백줄에 작성&#10;# 제목은 50자 이내 / 변경사항이 &quot;무엇&quot;인지 명확히 작성 / 끝에 마침표 금지&#10;# 예) feat : 로그인 기능 추가&#10;&#10;# 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리를 위함)&#10;&#10;#######본문#######&#10;# 본문(구체적인 내용)을 아랫줄에 작성&#10;# 여러 줄의 메시지를 작성할 땐 &quot;-&quot;로 구분 (한 줄은 72자 이내)&#10;&#10;################&#10;# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)&#10;# 예) Close #7333&#10;&#10;&#10;&#10;&#10;&#10;## 🧵 Commit Convention :: [Gitmoji](https://gitmoji.dev/)&#10;&#10;---&#10;&#10;**Commit Title Type**&#10;&#10;- ✨ feat : 새로운 기능 추가&#10;- 🐛 fix : 기능 수정, 버그 수정&#10;- 💡 chore : 오타 수정 및 새로운 기능이 추가되지 않고, 코드가 변경 된 경우 (주석 추가 및 수정 포함)&#10;- 📝 docs : 문서 수정 (readme 수정 시)&#10;- 🚚 build : 빌드 관련 파일 수정 및 삭제한 경우&#10;- ✅ test : 테스트 코드, 리팩터링 테스트 코드 추가(프로덕션 코드 변경 X)&#10;- ♻️ refactor : 코드 리팩터링&#10;- 🚑 hotfix : 긴급 수정" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2zzLjLYL2TmPd61J9P7kML25Szc" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager": "true",
    "git-widget-placeholder": "CI",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "C:/Users/iwill/FastAPIProject",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\iwill\FastAPIProject" />
      <recent name="C:\Users\iwill\FastAPIProject\app" />
    </key>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-PY-251.26927.90" />
        <option value="bundled-python-sdk-41e8cd69c857-64d779b69b7a-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.26927.90" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="디폴트 작업">
      <changelist id="434e5ea7-0a51-49b0-9943-b6dd5edb56f3" name="변경" comment="" />
      <created>1752729089075</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1752729089075</updated>
      <workItem from="1752729090133" duration="414000" />
      <workItem from="1752729515627" duration="44000" />
      <workItem from="1752729561897" duration="254000" />
      <workItem from="1752730227132" duration="14000" />
      <workItem from="1752730289891" duration="213000" />
      <workItem from="1752731768471" duration="1143000" />
      <workItem from="1752732997332" duration="5327000" />
      <workItem from="1752738820165" duration="3940000" />
      <workItem from="1752742929963" duration="2235000" />
      <workItem from="1752751293458" duration="1633000" />
      <workItem from="1752801676026" duration="1141000" />
    </task>
    <task id="LOCAL-00001" summary="################&#10;# 🚚 : &lt;Continious Intergration, CI&gt; &#10;&#10;&#10;&#10;#######본문#######&#10;파이팅하시고&#10;&#10;################&#10;&#10;&#10;&#10;&#10;&#10;## 🧵 Commit Convention :: [Gitmoji](https://gitmoji.dev/)&#10;&#10;---&#10;&#10;**Commit Title Type**&#10;&#10;- ✨ feat : 새로운 기능 추가&#10;- 🐛 fix : 기능 수정, 버그 수정&#10;- 💡 chore : 오타 수정 및 새로운 기능이 추가되지 않고, 코드가 변경 된 경우 (주석 추가 및 수정 포함)&#10;- 📝 docs : 문서 수정 (readme 수정 시)&#10;- 🚚 build : 빌드 관련 파일 수정 및 삭제한 경우&#10;- ✅ test : 테스트 코드, 리팩터링 테스트 코드 추가(프로덕션 코드 변경 X)&#10;- ♻️ refactor : 코드 리팩터링&#10;- 🚑 hotfix : 긴급 수정">
      <option name="closed" value="true" />
      <created>1752746714223</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1752746714223</updated>
    </task>
    <task id="LOCAL-00002" summary="################&#10;# &lt;✨&gt; : &lt;Continious Intergration&gt; &#10;&#10;# 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리를 위함)&#10;&#10;#######본문#######&#10;# 본문(구체적인 내용)을 아랫줄에 작성&#10;# 여러 줄의 메시지를 작성할 땐 &quot;-&quot;로 구분 (한 줄은 72자 이내)&#10;&#10;################&#10;# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)&#10;# 예) Close #7333&#10;&#10;&#10;&#10;&#10;&#10;## 🧵 Commit Convention :: [Gitmoji](https://gitmoji.dev/)&#10;&#10;---&#10;&#10;**Commit Title Type**&#10;&#10;- ✨ feat : 새로운 기능 추가&#10;- 🐛 fix : 기능 수정, 버그 수정&#10;- 💡 chore : 오타 수정 및 새로운 기능이 추가되지 않고, 코드가 변경 된 경우 (주석 추가 및 수정 포함)&#10;- 📝 docs : 문서 수정 (readme 수정 시)&#10;- 🚚 build : 빌드 관련 파일 수정 및 삭제한 경우&#10;- ✅ test : 테스트 코드, 리팩터링 테스트 코드 추가(프로덕션 코드 변경 X)&#10;- ♻️ refactor : 코드 리팩터링&#10;- 🚑 hotfix : 긴급 수정">
      <option name="closed" value="true" />
      <created>1752751644278</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1752751644278</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="################&#10;#  : &lt;Continious Intergration, CI&gt; &#10;&#10;&#10;&#10;#######본문#######&#10;파이팅하시고&#10;&#10;################&#10;&#10;&#10;&#10;&#10;&#10;##  Commit Convention :: [Gitmoji](https://gitmoji.dev/)&#10;&#10;---&#10;&#10;**Commit Title Type**&#10;&#10;- ✨ feat : 새로운 기능 추가&#10;-  fix : 기능 수정, 버그 수정&#10;-  chore : 오타 수정 및 새로운 기능이 추가되지 않고, 코드가 변경 된 경우 (주석 추가 및 수정 포함)&#10;-  docs : 문서 수정 (readme 수정 시)&#10;-  build : 빌드 관련 파일 수정 및 삭제한 경우&#10;- ✅ test : 테스트 코드, 리팩터링 테스트 코드 추가(프로덕션 코드 변경 X)&#10;- ♻️ refactor : 코드 리팩터링&#10;-  hotfix : 긴급 수정" />
    <MESSAGE value="################&#10;# &lt;✨&gt; : &lt;Continious Intergration&gt; &#10;&#10;# 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리를 위함)&#10;&#10;#######본문#######&#10;# 본문(구체적인 내용)을 아랫줄에 작성&#10;# 여러 줄의 메시지를 작성할 땐 &quot;-&quot;로 구분 (한 줄은 72자 이내)&#10;&#10;################&#10;# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)&#10;# 예) Close #7333&#10;&#10;&#10;&#10;&#10;&#10;##  Commit Convention :: [Gitmoji](https://gitmoji.dev/)&#10;&#10;---&#10;&#10;**Commit Title Type**&#10;&#10;- ✨ feat : 새로운 기능 추가&#10;-  fix : 기능 수정, 버그 수정&#10;-  chore : 오타 수정 및 새로운 기능이 추가되지 않고, 코드가 변경 된 경우 (주석 추가 및 수정 포함)&#10;-  docs : 문서 수정 (readme 수정 시)&#10;-  build : 빌드 관련 파일 수정 및 삭제한 경우&#10;- ✅ test : 테스트 코드, 리팩터링 테스트 코드 추가(프로덕션 코드 변경 X)&#10;- ♻️ refactor : 코드 리팩터링&#10;-  hotfix : 긴급 수정" />
    <option name="LAST_COMMIT_MESSAGE" value="################&#10;# &lt;✨&gt; : &lt;Continious Intergration&gt; &#10;&#10;# 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리를 위함)&#10;&#10;#######본문#######&#10;# 본문(구체적인 내용)을 아랫줄에 작성&#10;# 여러 줄의 메시지를 작성할 땐 &quot;-&quot;로 구분 (한 줄은 72자 이내)&#10;&#10;################&#10;# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)&#10;# 예) Close #7333&#10;&#10;&#10;&#10;&#10;&#10;##  Commit Convention :: [Gitmoji](https://gitmoji.dev/)&#10;&#10;---&#10;&#10;**Commit Title Type**&#10;&#10;- ✨ feat : 새로운 기능 추가&#10;-  fix : 기능 수정, 버그 수정&#10;-  chore : 오타 수정 및 새로운 기능이 추가되지 않고, 코드가 변경 된 경우 (주석 추가 및 수정 포함)&#10;-  docs : 문서 수정 (readme 수정 시)&#10;-  build : 빌드 관련 파일 수정 및 삭제한 경우&#10;- ✅ test : 테스트 코드, 리팩터링 테스트 코드 추가(프로덕션 코드 변경 X)&#10;- ♻️ refactor : 코드 리팩터링&#10;-  hotfix : 긴급 수정" />
  </component>
</project>